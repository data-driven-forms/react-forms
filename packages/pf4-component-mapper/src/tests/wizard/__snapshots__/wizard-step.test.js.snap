// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WizardStep /> should render correctly 1`] = `
<Fragment>
  <Component>
    <div
      className="pf-c-form"
    >
      <div
        key="foo"
      >
        foo
      </div>
    </div>
  </Component>
  <WizardStepButtons
    FieldProvider={[Function]}
    buttonLabels={
      Object {
        "back": "Back",
        "cancel": "Cancel",
        "next": "Next",
        "submit": "Submit",
      }
    }
    formOptions={
      Object {
        "getState": [MockFunction],
        "handleSubmit": [MockFunction],
        "onCancel": [MockFunction],
        "renderForm": [Function],
      }
    }
    handleNext={[MockFunction]}
    handlePrev={[MockFunction]}
  />
</Fragment>
`;

exports[`<WizardStep /> should render custom description 1`] = `
<Fragment>
  <Component>
    <div
      className="pf-c-form"
    >
      <div
        key="foo"
      >
        foo
      </div>
    </div>
  </Component>
  <WizardStepButtons
    FieldProvider={[Function]}
    buttonLabels={
      Object {
        "back": "Back",
        "cancel": "Cancel",
        "next": "Next",
        "submit": "Submit",
      }
    }
    formOptions={
      Object {
        "getState": [MockFunction],
        "handleSubmit": [MockFunction],
        "onCancel": [MockFunction],
        "renderForm": [Function],
      }
    }
    handleNext={[MockFunction]}
    handlePrev={[MockFunction]}
  />
</Fragment>
`;

exports[`<WizardStep /> should render title with showTitle 1`] = `
<Fragment>
  <Component>
    <div
      className="pf-c-form"
    >
      <RenderTitle
        title={
          <div>
            title
          </div>
        }
      />
      <div
        key="foo"
      >
        foo
      </div>
    </div>
  </Component>
  <WizardStepButtons
    FieldProvider={[Function]}
    buttonLabels={
      Object {
        "back": "Back",
        "cancel": "Cancel",
        "next": "Next",
        "submit": "Submit",
      }
    }
    formOptions={
      Object {
        "getState": [MockFunction],
        "handleSubmit": [MockFunction],
        "onCancel": [MockFunction],
        "renderForm": [Function],
      }
    }
    handleNext={[MockFunction]}
    handlePrev={[MockFunction]}
  />
</Fragment>
`;
