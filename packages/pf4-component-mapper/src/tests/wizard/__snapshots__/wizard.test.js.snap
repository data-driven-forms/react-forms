// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Wizard /> should render correctly and unmount 1`] = `
<FormRenderer
  FormTemplate={[Function]}
  clearOnUnmount={false}
  componentMapper={
    Object {
      "checkbox": [Function],
      "date-picker": [Function],
      "dual-list-select": [Function],
      "field-array": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select": [Function],
      "slider": [Function],
      "sub-form": [Function],
      "switch": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  onCancel={[MockFunction]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "wizard",
          "fields": Array [
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "name": "foo-field",
                },
              ],
              "name": "1",
              "nextStep": "2",
              "title": "foo-step",
            },
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "name": "bar-field",
                },
              ],
              "name": "2",
              "title": "bar-step",
            },
          ],
          "name": "wizard",
        },
      ],
    }
  }
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[Function]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormTemplate
      formFields={
        Array [
          <SingleField
            component="wizard"
            fields={
              Array [
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "foo-field",
                    },
                  ],
                  "name": "1",
                  "nextStep": "2",
                  "title": "foo-step",
                },
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "bar-field",
                    },
                  ],
                  "name": "2",
                  "title": "bar-step",
                },
              ]
            }
            name="wizard"
          />,
        ]
      }
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "wizard",
              "fields": Array [
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "foo-field",
                    },
                  ],
                  "name": "1",
                  "nextStep": "2",
                  "title": "foo-step",
                },
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "bar-field",
                    },
                  ],
                  "name": "2",
                  "title": "bar-step",
                },
              ],
              "name": "wizard",
            },
          ],
        }
      }
    >
      <PF4FormTemplate
        formFields={
          Array [
            <SingleField
              component="wizard"
              fields={
                Array [
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "foo-field",
                      },
                    ],
                    "name": "1",
                    "nextStep": "2",
                    "title": "foo-step",
                  },
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "bar-field",
                      },
                    ],
                    "name": "2",
                    "title": "bar-step",
                  },
                ]
              }
              name="wizard"
            />,
          ]
        }
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "wizard",
                "fields": Array [
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "foo-field",
                      },
                    ],
                    "name": "1",
                    "nextStep": "2",
                    "title": "foo-step",
                  },
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "bar-field",
                      },
                    ],
                    "name": "2",
                    "title": "bar-step",
                  },
                ],
                "name": "wizard",
              },
            ],
          }
        }
        showFormControls={false}
      >
        <FormTemplate
          Button={[Function]}
          ButtonGroup={[Function]}
          Description={[Function]}
          FormWrapper={[Function]}
          Title={[Function]}
          disableSubmit={Array []}
          formFields={
            Array [
              <SingleField
                component="wizard"
                fields={
                  Array [
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "foo-field",
                        },
                      ],
                      "name": "1",
                      "nextStep": "2",
                      "title": "foo-step",
                    },
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "bar-field",
                        },
                      ],
                      "name": "2",
                      "title": "bar-step",
                    },
                  ]
                }
                name="wizard"
              />,
            ]
          }
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "wizard",
                  "fields": Array [
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "foo-field",
                        },
                      ],
                      "name": "1",
                      "nextStep": "2",
                      "title": "foo-step",
                    },
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "bar-field",
                        },
                      ],
                      "name": "2",
                      "title": "bar-step",
                    },
                  ],
                  "name": "wizard",
                },
              ],
            }
          }
          showFormControls={false}
        >
          <Component
            onSubmit={[Function]}
          >
            <form
              className="pf-c-form"
              noValidate={true}
              onSubmit={[Function]}
            >
              <SingleField
                component="wizard"
                fields={
                  Array [
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "foo-field",
                        },
                      ],
                      "name": "1",
                      "nextStep": "2",
                      "title": "foo-step",
                    },
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "bar-field",
                        },
                      ],
                      "name": "2",
                      "title": "bar-step",
                    },
                  ]
                }
                key="wizard"
                name="wizard"
              >
                <FormConditionWrapper>
                  <FormFieldHideWrapper
                    hideField={false}
                  >
                    <WizardFunction
                      buttonLabels={Object {}}
                      component="wizard"
                      fields={
                        Array [
                          Object {
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "name": "foo-field",
                              },
                            ],
                            "name": "1",
                            "nextStep": "2",
                            "title": "foo-step",
                          },
                          Object {
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "name": "bar-field",
                              },
                            ],
                            "name": "2",
                            "title": "bar-step",
                          },
                        ]
                      }
                      name="wizard"
                    >
                      <Wizard
                        Wizard={[Function]}
                        buttonLabels={
                          Object {
                            "back": "Back",
                            "cancel": "Cancel",
                            "next": "Next",
                            "submit": "Submit",
                          }
                        }
                        component="wizard"
                        fields={
                          Array [
                            Object {
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "name": "foo-field",
                                },
                              ],
                              "name": "1",
                              "nextStep": "2",
                              "title": "foo-step",
                            },
                            Object {
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "name": "bar-field",
                                },
                              ],
                              "name": "2",
                              "title": "bar-step",
                            },
                          ]
                        }
                        name="wizard"
                      >
                        <WizardInternal
                          activeStepIndex={0}
                          buttonLabels={
                            Object {
                              "back": "Back",
                              "cancel": "Cancel",
                              "next": "Next",
                              "submit": "Submit",
                            }
                          }
                          currentStep={
                            Object {
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "name": "foo-field",
                                },
                              ],
                              "name": "1",
                              "nextStep": "2",
                              "title": "foo-step",
                            }
                          }
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onReset": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "registerInputFile": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unRegisterInputFile": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          handleNext={[Function]}
                          handlePrev={[Function]}
                          isDynamic={false}
                          jumpToStep={[Function]}
                          maxStepIndex={0}
                          name="wizard"
                          navSchema={
                            Array [
                              Object {
                                "index": 0,
                                "primary": true,
                                "substepOf": undefined,
                                "title": "foo-step",
                              },
                              Object {
                                "index": 1,
                                "primary": true,
                                "substepOf": undefined,
                                "title": "bar-step",
                              },
                            ]
                          }
                          onKeyDown={[Function]}
                          prevSteps={Array []}
                          setPrevSteps={[Function]}
                        >
                          <Modal>
                            <div
                              className="pf-c-wizard no-shadow ddorg__pf4-component-mapper__wizard"
                              name="wizard"
                              onKeyDown={[Function]}
                              role="dialog"
                            >
                              <div
                                className="pf-c-wizard__outer-wrap"
                              >
                                <div
                                  className="pf-c-wizard__inner-wrap"
                                >
                                  <Component>
                                    <nav
                                      className="pf-c-wizard__nav"
                                    >
                                      <ol
                                        className="pf-c-wizard__nav-list"
                                      >
                                        <FormSpy
                                          subscription={
                                            Object {
                                              "valid": true,
                                              "validating": true,
                                              "values": true,
                                            }
                                          }
                                        >
                                          <WizardNavigation
                                            activeStepIndex={0}
                                            isDynamic={false}
                                            jumpToStep={[Function]}
                                            maxStepIndex={0}
                                            navSchema={
                                              Array [
                                                Object {
                                                  "index": 0,
                                                  "primary": true,
                                                  "substepOf": undefined,
                                                  "title": "foo-step",
                                                },
                                                Object {
                                                  "index": 1,
                                                  "primary": true,
                                                  "substepOf": undefined,
                                                  "title": "bar-step",
                                                },
                                              ]
                                            }
                                            setPrevSteps={[Function]}
                                            valid={true}
                                            validating={false}
                                            values={Object {}}
                                          >
                                            <Component
                                              activeStepIndex={0}
                                              isDynamic={false}
                                              jumpToStep={[Function]}
                                              maxStepIndex={0}
                                              navSchema={
                                                Array [
                                                  Object {
                                                    "index": 0,
                                                    "primary": true,
                                                    "substepOf": undefined,
                                                    "title": "foo-step",
                                                  },
                                                  Object {
                                                    "index": 1,
                                                    "primary": true,
                                                    "substepOf": undefined,
                                                    "title": "bar-step",
                                                  },
                                                ]
                                              }
                                              valid={true}
                                              validating={false}
                                            >
                                              <Component
                                                content="foo-step"
                                                isCurrent={true}
                                                isDisabled={false}
                                                key="foo-step"
                                                onNavItemClick={[Function]}
                                                step={0}
                                              >
                                                <li
                                                  className="pf-c-wizard__nav-item"
                                                >
                                                  <a
                                                    aria-current="page"
                                                    aria-disabled={false}
                                                    className="pf-c-wizard__nav-link pf-m-current"
                                                    onClick={[Function]}
                                                  >
                                                    foo-step
                                                  </a>
                                                </li>
                                              </Component>
                                              <Component
                                                content="bar-step"
                                                isCurrent={false}
                                                isDisabled={true}
                                                key="bar-step"
                                                onNavItemClick={[Function]}
                                                step={1}
                                              >
                                                <li
                                                  className="pf-c-wizard__nav-item"
                                                >
                                                  <a
                                                    aria-current={false}
                                                    aria-disabled={true}
                                                    className="pf-c-wizard__nav-link pf-m-disabled"
                                                    onClick={[Function]}
                                                    tabIndex={-1}
                                                  >
                                                    bar-step
                                                  </a>
                                                </li>
                                              </Component>
                                            </Component>
                                          </WizardNavigation>
                                        </FormSpy>
                                      </ol>
                                    </nav>
                                  </Component>
                                  <WizardStep
                                    buttonLabels={
                                      Object {
                                        "back": "Back",
                                        "cancel": "Cancel",
                                        "next": "Next",
                                        "submit": "Submit",
                                      }
                                    }
                                    disableBack={true}
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "name": "foo-field",
                                        },
                                      ]
                                    }
                                    formOptions={
                                      Object {
                                        "batch": [Function],
                                        "blur": [Function],
                                        "change": [Function],
                                        "clearOnUnmount": false,
                                        "clearedValue": undefined,
                                        "concat": [Function],
                                        "destroyOnUnregister": false,
                                        "focus": [Function],
                                        "getFieldState": [Function],
                                        "getRegisteredFields": [Function],
                                        "getState": [Function],
                                        "handleSubmit": [Function],
                                        "initialize": [Function],
                                        "insert": [Function],
                                        "isValidationPaused": [Function],
                                        "move": [Function],
                                        "onCancel": [Function],
                                        "onReset": [Function],
                                        "onSubmit": [MockFunction],
                                        "pauseValidation": [Function],
                                        "pop": [Function],
                                        "pristine": true,
                                        "push": [Function],
                                        "registerField": [Function],
                                        "registerInputFile": [Function],
                                        "remove": [Function],
                                        "removeBatch": [Function],
                                        "renderForm": [Function],
                                        "reset": [Function],
                                        "resetFieldState": [Function],
                                        "resumeValidation": [Function],
                                        "setConfig": [Function],
                                        "shift": [Function],
                                        "submit": [Function],
                                        "subscribe": [Function],
                                        "swap": [Function],
                                        "unRegisterInputFile": [Function],
                                        "unshift": [Function],
                                        "update": [Function],
                                        "valid": true,
                                      }
                                    }
                                    handleNext={[Function]}
                                    handlePrev={[Function]}
                                    name="1"
                                    nextStep="2"
                                    title="foo-step"
                                  >
                                    <Component>
                                      <main
                                        className="pf-c-wizard__main"
                                      >
                                        <div
                                          className="pf-c-wizard__main-body"
                                        >
                                          <div
                                            className="pf-c-form"
                                          >
                                            <SingleField
                                              component="text-field"
                                              key="foo-field"
                                              name="foo-field"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <TextField
                                                    component="text-field"
                                                    name="foo-field"
                                                  >
                                                    <FormGroup
                                                      id="foo-field"
                                                      isRequired={false}
                                                      meta={
                                                        Object {
                                                          "active": false,
                                                          "data": Object {},
                                                          "dirty": false,
                                                          "dirtySinceLastSubmit": false,
                                                          "error": undefined,
                                                          "initial": undefined,
                                                          "invalid": false,
                                                          "length": undefined,
                                                          "modified": false,
                                                          "pristine": true,
                                                          "submitError": undefined,
                                                          "submitFailed": false,
                                                          "submitSucceeded": false,
                                                          "submitting": false,
                                                          "touched": false,
                                                          "valid": true,
                                                          "validating": false,
                                                          "visited": false,
                                                        }
                                                      }
                                                    >
                                                      <Component
                                                        fieldId="foo-field"
                                                        isRequired={false}
                                                        validated="default"
                                                      >
                                                        <div
                                                          className="pf-c-form__group"
                                                        >
                                                          <div
                                                            className="pf-c-form__group-control"
                                                          >
                                                            <ForwardRef
                                                              id="foo-field"
                                                              name="foo-field"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              validated="default"
                                                              value=""
                                                            >
                                                              <TextInputBase
                                                                aria-label={null}
                                                                className=""
                                                                id="foo-field"
                                                                innerRef={null}
                                                                isDisabled={false}
                                                                isReadOnly={false}
                                                                isRequired={false}
                                                                name="foo-field"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                type="text"
                                                                validated="default"
                                                                value=""
                                                              >
                                                                <input
                                                                  aria-invalid={false}
                                                                  aria-label={null}
                                                                  className="pf-c-form-control"
                                                                  disabled={false}
                                                                  id="foo-field"
                                                                  name="foo-field"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  readOnly={false}
                                                                  required={false}
                                                                  type="text"
                                                                  value=""
                                                                />
                                                              </TextInputBase>
                                                            </ForwardRef>
                                                          </div>
                                                        </div>
                                                      </Component>
                                                    </FormGroup>
                                                  </TextField>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </SingleField>
                                          </div>
                                        </div>
                                      </main>
                                    </Component>
                                    <WizardStepButtons
                                      buttonLabels={
                                        Object {
                                          "back": "Back",
                                          "cancel": "Cancel",
                                          "next": "Next",
                                          "submit": "Submit",
                                        }
                                      }
                                      disableBack={true}
                                      formOptions={
                                        Object {
                                          "batch": [Function],
                                          "blur": [Function],
                                          "change": [Function],
                                          "clearOnUnmount": false,
                                          "clearedValue": undefined,
                                          "concat": [Function],
                                          "destroyOnUnregister": false,
                                          "focus": [Function],
                                          "getFieldState": [Function],
                                          "getRegisteredFields": [Function],
                                          "getState": [Function],
                                          "handleSubmit": [Function],
                                          "initialize": [Function],
                                          "insert": [Function],
                                          "isValidationPaused": [Function],
                                          "move": [Function],
                                          "onCancel": [Function],
                                          "onReset": [Function],
                                          "onSubmit": [MockFunction],
                                          "pauseValidation": [Function],
                                          "pop": [Function],
                                          "pristine": true,
                                          "push": [Function],
                                          "registerField": [Function],
                                          "registerInputFile": [Function],
                                          "remove": [Function],
                                          "removeBatch": [Function],
                                          "renderForm": [Function],
                                          "reset": [Function],
                                          "resetFieldState": [Function],
                                          "resumeValidation": [Function],
                                          "setConfig": [Function],
                                          "shift": [Function],
                                          "submit": [Function],
                                          "subscribe": [Function],
                                          "swap": [Function],
                                          "unRegisterInputFile": [Function],
                                          "unshift": [Function],
                                          "update": [Function],
                                          "valid": true,
                                        }
                                      }
                                      handleNext={[Function]}
                                      handlePrev={[Function]}
                                      nextStep="2"
                                    >
                                      <footer
                                        className="pf-c-wizard__footer "
                                      >
                                        <FormSpy>
                                          <NextButton
                                            batch={[Function]}
                                            blur={[Function]}
                                            change={[Function]}
                                            clearOnUnmount={false}
                                            concat={[Function]}
                                            destroyOnUnregister={false}
                                            focus={[Function]}
                                            getFieldState={[Function]}
                                            getRegisteredFields={[Function]}
                                            getState={[Function]}
                                            handleNext={[Function]}
                                            handleSubmit={[Function]}
                                            initialize={[Function]}
                                            insert={[Function]}
                                            isValidationPaused={[Function]}
                                            move={[Function]}
                                            nextLabel="Next"
                                            nextStep="2"
                                            onCancel={[Function]}
                                            onReset={[Function]}
                                            onSubmit={[MockFunction]}
                                            pauseValidation={[Function]}
                                            pop={[Function]}
                                            pristine={true}
                                            push={[Function]}
                                            registerField={[Function]}
                                            registerInputFile={[Function]}
                                            remove={[Function]}
                                            removeBatch={[Function]}
                                            renderForm={[Function]}
                                            reset={[Function]}
                                            resetFieldState={[Function]}
                                            resumeValidation={[Function]}
                                            setConfig={[Function]}
                                            shift={[Function]}
                                            submit={[Function]}
                                            submitLabel="Submit"
                                            subscribe={[Function]}
                                            swap={[Function]}
                                            unRegisterInputFile={[Function]}
                                            unshift={[Function]}
                                            update={[Function]}
                                            valid={true}
                                          >
                                            <Component
                                              isDisabled={false}
                                              onClick={[Function]}
                                              type="button"
                                              variant="primary"
                                            >
                                              <button
                                                aria-disabled={null}
                                                aria-label={null}
                                                className="pf-c-button pf-m-primary"
                                                data-ouia-component-id={null}
                                                data-ouia-component-type="PF4/Button"
                                                data-ouia-safe={true}
                                                disabled={false}
                                                onClick={[Function]}
                                                tabIndex={null}
                                                type="button"
                                              >
                                                Next
                                              </button>
                                            </Component>
                                          </NextButton>
                                          <Component
                                            isDisabled={true}
                                            onClick={[Function]}
                                            type="button"
                                            variant="secondary"
                                          >
                                            <button
                                              aria-disabled={null}
                                              aria-label={null}
                                              className="pf-c-button pf-m-secondary"
                                              data-ouia-component-id={null}
                                              data-ouia-component-type="PF4/Button"
                                              data-ouia-safe={true}
                                              disabled={true}
                                              onClick={[Function]}
                                              tabIndex={null}
                                              type="button"
                                            >
                                              Back
                                            </button>
                                          </Component>
                                          <Component
                                            onClick={[Function]}
                                            type="button"
                                            variant="link"
                                          >
                                            <button
                                              aria-disabled={null}
                                              aria-label={null}
                                              className="pf-c-button pf-m-link"
                                              data-ouia-component-id={null}
                                              data-ouia-component-type="PF4/Button"
                                              data-ouia-safe={true}
                                              disabled={false}
                                              onClick={[Function]}
                                              tabIndex={null}
                                              type="button"
                                            >
                                              Cancel
                                            </button>
                                          </Component>
                                        </FormSpy>
                                      </footer>
                                    </WizardStepButtons>
                                  </WizardStep>
                                </div>
                              </div>
                            </div>
                          </Modal>
                        </WizardInternal>
                      </Wizard>
                    </WizardFunction>
                  </FormFieldHideWrapper>
                </FormConditionWrapper>
              </SingleField>
            </form>
          </Component>
        </FormTemplate>
      </PF4FormTemplate>
    </FormTemplate>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Wizard /> should render correctly and unmount 2`] = `null`;

exports[`<Wizard /> should render correctly in modal and unmount 1`] = `
<FormRenderer
  FormTemplate={[Function]}
  clearOnUnmount={false}
  componentMapper={
    Object {
      "checkbox": [Function],
      "date-picker": [Function],
      "dual-list-select": [Function],
      "field-array": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select": [Function],
      "slider": [Function],
      "sub-form": [Function],
      "switch": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  onCancel={[MockFunction]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "wizard",
          "fields": Array [
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "name": "foo-field",
                },
              ],
              "name": "1",
              "nextStep": "2",
              "title": "foo-step",
            },
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "name": "bar-field",
                },
              ],
              "name": "2",
              "title": "bar-step",
            },
          ],
          "inModal": true,
          "name": "wizard",
        },
      ],
    }
  }
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[Function]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormTemplate
      formFields={
        Array [
          <SingleField
            component="wizard"
            fields={
              Array [
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "foo-field",
                    },
                  ],
                  "name": "1",
                  "nextStep": "2",
                  "title": "foo-step",
                },
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "bar-field",
                    },
                  ],
                  "name": "2",
                  "title": "bar-step",
                },
              ]
            }
            inModal={true}
            name="wizard"
          />,
        ]
      }
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "wizard",
              "fields": Array [
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "foo-field",
                    },
                  ],
                  "name": "1",
                  "nextStep": "2",
                  "title": "foo-step",
                },
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "name": "bar-field",
                    },
                  ],
                  "name": "2",
                  "title": "bar-step",
                },
              ],
              "inModal": true,
              "name": "wizard",
            },
          ],
        }
      }
    >
      <PF4FormTemplate
        formFields={
          Array [
            <SingleField
              component="wizard"
              fields={
                Array [
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "foo-field",
                      },
                    ],
                    "name": "1",
                    "nextStep": "2",
                    "title": "foo-step",
                  },
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "bar-field",
                      },
                    ],
                    "name": "2",
                    "title": "bar-step",
                  },
                ]
              }
              inModal={true}
              name="wizard"
            />,
          ]
        }
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "wizard",
                "fields": Array [
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "foo-field",
                      },
                    ],
                    "name": "1",
                    "nextStep": "2",
                    "title": "foo-step",
                  },
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "name": "bar-field",
                      },
                    ],
                    "name": "2",
                    "title": "bar-step",
                  },
                ],
                "inModal": true,
                "name": "wizard",
              },
            ],
          }
        }
        showFormControls={false}
      >
        <FormTemplate
          Button={[Function]}
          ButtonGroup={[Function]}
          Description={[Function]}
          FormWrapper={[Function]}
          Title={[Function]}
          disableSubmit={Array []}
          formFields={
            Array [
              <SingleField
                component="wizard"
                fields={
                  Array [
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "foo-field",
                        },
                      ],
                      "name": "1",
                      "nextStep": "2",
                      "title": "foo-step",
                    },
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "bar-field",
                        },
                      ],
                      "name": "2",
                      "title": "bar-step",
                    },
                  ]
                }
                inModal={true}
                name="wizard"
              />,
            ]
          }
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "wizard",
                  "fields": Array [
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "foo-field",
                        },
                      ],
                      "name": "1",
                      "nextStep": "2",
                      "title": "foo-step",
                    },
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "bar-field",
                        },
                      ],
                      "name": "2",
                      "title": "bar-step",
                    },
                  ],
                  "inModal": true,
                  "name": "wizard",
                },
              ],
            }
          }
          showFormControls={false}
        >
          <Component
            onSubmit={[Function]}
          >
            <form
              className="pf-c-form"
              noValidate={true}
              onSubmit={[Function]}
            >
              <SingleField
                component="wizard"
                fields={
                  Array [
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "foo-field",
                        },
                      ],
                      "name": "1",
                      "nextStep": "2",
                      "title": "foo-step",
                    },
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "name": "bar-field",
                        },
                      ],
                      "name": "2",
                      "title": "bar-step",
                    },
                  ]
                }
                inModal={true}
                key="wizard"
                name="wizard"
              >
                <FormConditionWrapper>
                  <FormFieldHideWrapper
                    hideField={false}
                  >
                    <WizardFunction
                      buttonLabels={Object {}}
                      component="wizard"
                      fields={
                        Array [
                          Object {
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "name": "foo-field",
                              },
                            ],
                            "name": "1",
                            "nextStep": "2",
                            "title": "foo-step",
                          },
                          Object {
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "name": "bar-field",
                              },
                            ],
                            "name": "2",
                            "title": "bar-step",
                          },
                        ]
                      }
                      inModal={true}
                      name="wizard"
                    >
                      <Wizard
                        Wizard={[Function]}
                        buttonLabels={
                          Object {
                            "back": "Back",
                            "cancel": "Cancel",
                            "next": "Next",
                            "submit": "Submit",
                          }
                        }
                        component="wizard"
                        fields={
                          Array [
                            Object {
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "name": "foo-field",
                                },
                              ],
                              "name": "1",
                              "nextStep": "2",
                              "title": "foo-step",
                            },
                            Object {
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "name": "bar-field",
                                },
                              ],
                              "name": "2",
                              "title": "bar-step",
                            },
                          ]
                        }
                        inModal={true}
                        name="wizard"
                      >
                        <WizardInternal
                          activeStepIndex={0}
                          buttonLabels={
                            Object {
                              "back": "Back",
                              "cancel": "Cancel",
                              "next": "Next",
                              "submit": "Submit",
                            }
                          }
                          currentStep={
                            Object {
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "name": "foo-field",
                                },
                              ],
                              "name": "1",
                              "nextStep": "2",
                              "title": "foo-step",
                            }
                          }
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onReset": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "registerInputFile": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unRegisterInputFile": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          handleNext={[Function]}
                          handlePrev={[Function]}
                          inModal={true}
                          isDynamic={false}
                          jumpToStep={[Function]}
                          maxStepIndex={0}
                          name="wizard"
                          navSchema={
                            Array [
                              Object {
                                "index": 0,
                                "primary": true,
                                "substepOf": undefined,
                                "title": "foo-step",
                              },
                              Object {
                                "index": 1,
                                "primary": true,
                                "substepOf": undefined,
                                "title": "bar-step",
                              },
                            ]
                          }
                          onKeyDown={[Function]}
                          prevSteps={Array []}
                          setPrevSteps={[Function]}
                        >
                          <Modal
                            container={
                              <div>
                                <div
                                  class="pf-c-backdrop"
                                >
                                  <div
                                    class="pf-l-bullseye"
                                  >
                                    <div
                                      class="pf-c-modal-box pf-m-lg"
                                    >
                                      <div
                                        aria-modal="true"
                                        class="pf-c-wizard  ddorg__pf4-component-mapper__wizard"
                                        name="wizard"
                                        role="dialog"
                                      >
                                        <div
                                          class="pf-c-wizard__outer-wrap"
                                        >
                                          <div
                                            class="pf-c-wizard__inner-wrap"
                                          >
                                            <nav
                                              class="pf-c-wizard__nav"
                                            >
                                              <ol
                                                class="pf-c-wizard__nav-list"
                                              >
                                                <li
                                                  class="pf-c-wizard__nav-item"
                                                >
                                                  <a
                                                    aria-current="page"
                                                    aria-disabled="false"
                                                    class="pf-c-wizard__nav-link pf-m-current"
                                                  >
                                                    foo-step
                                                  </a>
                                                </li>
                                                <li
                                                  class="pf-c-wizard__nav-item"
                                                >
                                                  <a
                                                    aria-current="false"
                                                    aria-disabled="true"
                                                    class="pf-c-wizard__nav-link pf-m-disabled"
                                                    tabindex="-1"
                                                  >
                                                    bar-step
                                                  </a>
                                                </li>
                                              </ol>
                                            </nav>
                                            <main
                                              class="pf-c-wizard__main"
                                            >
                                              <div
                                                class="pf-c-wizard__main-body"
                                              >
                                                <div
                                                  class="pf-c-form"
                                                >
                                                  <div
                                                    class="pf-c-form__group"
                                                  >
                                                    <div
                                                      class="pf-c-form__group-control"
                                                    >
                                                      <input
                                                        aria-invalid="false"
                                                        class="pf-c-form-control"
                                                        id="foo-field"
                                                        name="foo-field"
                                                        type="text"
                                                        value=""
                                                      />
                                                      
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </main>
                                            <footer
                                              class="pf-c-wizard__footer "
                                            >
                                              <button
                                                class="pf-c-button pf-m-primary"
                                                data-ouia-component-type="PF4/Button"
                                                data-ouia-safe="true"
                                                type="button"
                                              >
                                                Next
                                              </button>
                                              <button
                                                class="pf-c-button pf-m-secondary"
                                                data-ouia-component-type="PF4/Button"
                                                data-ouia-safe="true"
                                                disabled=""
                                                type="button"
                                              >
                                                Back
                                              </button>
                                              <button
                                                class="pf-c-button pf-m-link"
                                                data-ouia-component-type="PF4/Button"
                                                data-ouia-safe="true"
                                                type="button"
                                              >
                                                Cancel
                                              </button>
                                            </footer>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            }
                            inModal={true}
                          >
                            <Portal
                              containerInfo={
                                <div>
                                  <div
                                    class="pf-c-backdrop"
                                  >
                                    <div
                                      class="pf-l-bullseye"
                                    >
                                      <div
                                        class="pf-c-modal-box pf-m-lg"
                                      >
                                        <div
                                          aria-modal="true"
                                          class="pf-c-wizard  ddorg__pf4-component-mapper__wizard"
                                          name="wizard"
                                          role="dialog"
                                        >
                                          <div
                                            class="pf-c-wizard__outer-wrap"
                                          >
                                            <div
                                              class="pf-c-wizard__inner-wrap"
                                            >
                                              <nav
                                                class="pf-c-wizard__nav"
                                              >
                                                <ol
                                                  class="pf-c-wizard__nav-list"
                                                >
                                                  <li
                                                    class="pf-c-wizard__nav-item"
                                                  >
                                                    <a
                                                      aria-current="page"
                                                      aria-disabled="false"
                                                      class="pf-c-wizard__nav-link pf-m-current"
                                                    >
                                                      foo-step
                                                    </a>
                                                  </li>
                                                  <li
                                                    class="pf-c-wizard__nav-item"
                                                  >
                                                    <a
                                                      aria-current="false"
                                                      aria-disabled="true"
                                                      class="pf-c-wizard__nav-link pf-m-disabled"
                                                      tabindex="-1"
                                                    >
                                                      bar-step
                                                    </a>
                                                  </li>
                                                </ol>
                                              </nav>
                                              <main
                                                class="pf-c-wizard__main"
                                              >
                                                <div
                                                  class="pf-c-wizard__main-body"
                                                >
                                                  <div
                                                    class="pf-c-form"
                                                  >
                                                    <div
                                                      class="pf-c-form__group"
                                                    >
                                                      <div
                                                        class="pf-c-form__group-control"
                                                      >
                                                        <input
                                                          aria-invalid="false"
                                                          class="pf-c-form-control"
                                                          id="foo-field"
                                                          name="foo-field"
                                                          type="text"
                                                          value=""
                                                        />
                                                        
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </main>
                                              <footer
                                                class="pf-c-wizard__footer "
                                              >
                                                <button
                                                  class="pf-c-button pf-m-primary"
                                                  data-ouia-component-type="PF4/Button"
                                                  data-ouia-safe="true"
                                                  type="button"
                                                >
                                                  Next
                                                </button>
                                                <button
                                                  class="pf-c-button pf-m-secondary"
                                                  data-ouia-component-type="PF4/Button"
                                                  data-ouia-safe="true"
                                                  disabled=""
                                                  type="button"
                                                >
                                                  Back
                                                </button>
                                                <button
                                                  class="pf-c-button pf-m-link"
                                                  data-ouia-component-type="PF4/Button"
                                                  data-ouia-safe="true"
                                                  type="button"
                                                >
                                                  Cancel
                                                </button>
                                              </footer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              }
                            >
                              <Component>
                                <div
                                  className="pf-c-backdrop"
                                >
                                  <Component>
                                    <div
                                      className="pf-l-bullseye"
                                    >
                                      <div
                                        className="pf-c-modal-box pf-m-lg"
                                      >
                                        <div
                                          aria-modal="true"
                                          className="pf-c-wizard  ddorg__pf4-component-mapper__wizard"
                                          name="wizard"
                                          onKeyDown={[Function]}
                                          role="dialog"
                                        >
                                          <div
                                            className="pf-c-wizard__outer-wrap"
                                          >
                                            <div
                                              className="pf-c-wizard__inner-wrap"
                                            >
                                              <Component>
                                                <nav
                                                  className="pf-c-wizard__nav"
                                                >
                                                  <ol
                                                    className="pf-c-wizard__nav-list"
                                                  >
                                                    <FormSpy
                                                      subscription={
                                                        Object {
                                                          "valid": true,
                                                          "validating": true,
                                                          "values": true,
                                                        }
                                                      }
                                                    >
                                                      <WizardNavigation
                                                        activeStepIndex={0}
                                                        isDynamic={false}
                                                        jumpToStep={[Function]}
                                                        maxStepIndex={0}
                                                        navSchema={
                                                          Array [
                                                            Object {
                                                              "index": 0,
                                                              "primary": true,
                                                              "substepOf": undefined,
                                                              "title": "foo-step",
                                                            },
                                                            Object {
                                                              "index": 1,
                                                              "primary": true,
                                                              "substepOf": undefined,
                                                              "title": "bar-step",
                                                            },
                                                          ]
                                                        }
                                                        setPrevSteps={[Function]}
                                                        valid={true}
                                                        validating={false}
                                                        values={Object {}}
                                                      >
                                                        <Component
                                                          activeStepIndex={0}
                                                          isDynamic={false}
                                                          jumpToStep={[Function]}
                                                          maxStepIndex={0}
                                                          navSchema={
                                                            Array [
                                                              Object {
                                                                "index": 0,
                                                                "primary": true,
                                                                "substepOf": undefined,
                                                                "title": "foo-step",
                                                              },
                                                              Object {
                                                                "index": 1,
                                                                "primary": true,
                                                                "substepOf": undefined,
                                                                "title": "bar-step",
                                                              },
                                                            ]
                                                          }
                                                          valid={true}
                                                          validating={false}
                                                        >
                                                          <Component
                                                            content="foo-step"
                                                            isCurrent={true}
                                                            isDisabled={false}
                                                            key="foo-step"
                                                            onNavItemClick={[Function]}
                                                            step={0}
                                                          >
                                                            <li
                                                              className="pf-c-wizard__nav-item"
                                                            >
                                                              <a
                                                                aria-current="page"
                                                                aria-disabled={false}
                                                                className="pf-c-wizard__nav-link pf-m-current"
                                                                onClick={[Function]}
                                                              >
                                                                foo-step
                                                              </a>
                                                            </li>
                                                          </Component>
                                                          <Component
                                                            content="bar-step"
                                                            isCurrent={false}
                                                            isDisabled={true}
                                                            key="bar-step"
                                                            onNavItemClick={[Function]}
                                                            step={1}
                                                          >
                                                            <li
                                                              className="pf-c-wizard__nav-item"
                                                            >
                                                              <a
                                                                aria-current={false}
                                                                aria-disabled={true}
                                                                className="pf-c-wizard__nav-link pf-m-disabled"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                              >
                                                                bar-step
                                                              </a>
                                                            </li>
                                                          </Component>
                                                        </Component>
                                                      </WizardNavigation>
                                                    </FormSpy>
                                                  </ol>
                                                </nav>
                                              </Component>
                                              <WizardStep
                                                buttonLabels={
                                                  Object {
                                                    "back": "Back",
                                                    "cancel": "Cancel",
                                                    "next": "Next",
                                                    "submit": "Submit",
                                                  }
                                                }
                                                disableBack={true}
                                                fields={
                                                  Array [
                                                    Object {
                                                      "component": "text-field",
                                                      "name": "foo-field",
                                                    },
                                                  ]
                                                }
                                                formOptions={
                                                  Object {
                                                    "batch": [Function],
                                                    "blur": [Function],
                                                    "change": [Function],
                                                    "clearOnUnmount": false,
                                                    "clearedValue": undefined,
                                                    "concat": [Function],
                                                    "destroyOnUnregister": false,
                                                    "focus": [Function],
                                                    "getFieldState": [Function],
                                                    "getRegisteredFields": [Function],
                                                    "getState": [Function],
                                                    "handleSubmit": [Function],
                                                    "initialize": [Function],
                                                    "insert": [Function],
                                                    "isValidationPaused": [Function],
                                                    "move": [Function],
                                                    "onCancel": [Function],
                                                    "onReset": [Function],
                                                    "onSubmit": [MockFunction],
                                                    "pauseValidation": [Function],
                                                    "pop": [Function],
                                                    "pristine": true,
                                                    "push": [Function],
                                                    "registerField": [Function],
                                                    "registerInputFile": [Function],
                                                    "remove": [Function],
                                                    "removeBatch": [Function],
                                                    "renderForm": [Function],
                                                    "reset": [Function],
                                                    "resetFieldState": [Function],
                                                    "resumeValidation": [Function],
                                                    "setConfig": [Function],
                                                    "shift": [Function],
                                                    "submit": [Function],
                                                    "subscribe": [Function],
                                                    "swap": [Function],
                                                    "unRegisterInputFile": [Function],
                                                    "unshift": [Function],
                                                    "update": [Function],
                                                    "valid": true,
                                                  }
                                                }
                                                handleNext={[Function]}
                                                handlePrev={[Function]}
                                                name="1"
                                                nextStep="2"
                                                title="foo-step"
                                              >
                                                <Component>
                                                  <main
                                                    className="pf-c-wizard__main"
                                                  >
                                                    <div
                                                      className="pf-c-wizard__main-body"
                                                    >
                                                      <div
                                                        className="pf-c-form"
                                                      >
                                                        <SingleField
                                                          component="text-field"
                                                          key="foo-field"
                                                          name="foo-field"
                                                        >
                                                          <FormConditionWrapper>
                                                            <FormFieldHideWrapper
                                                              hideField={false}
                                                            >
                                                              <TextField
                                                                component="text-field"
                                                                name="foo-field"
                                                              >
                                                                <FormGroup
                                                                  id="foo-field"
                                                                  isRequired={false}
                                                                  meta={
                                                                    Object {
                                                                      "active": false,
                                                                      "data": Object {},
                                                                      "dirty": false,
                                                                      "dirtySinceLastSubmit": false,
                                                                      "error": undefined,
                                                                      "initial": undefined,
                                                                      "invalid": false,
                                                                      "length": undefined,
                                                                      "modified": false,
                                                                      "pristine": true,
                                                                      "submitError": undefined,
                                                                      "submitFailed": false,
                                                                      "submitSucceeded": false,
                                                                      "submitting": false,
                                                                      "touched": false,
                                                                      "valid": true,
                                                                      "validating": false,
                                                                      "visited": false,
                                                                    }
                                                                  }
                                                                >
                                                                  <Component
                                                                    fieldId="foo-field"
                                                                    isRequired={false}
                                                                    validated="default"
                                                                  >
                                                                    <div
                                                                      className="pf-c-form__group"
                                                                    >
                                                                      <div
                                                                        className="pf-c-form__group-control"
                                                                      >
                                                                        <ForwardRef
                                                                          id="foo-field"
                                                                          name="foo-field"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          validated="default"
                                                                          value=""
                                                                        >
                                                                          <TextInputBase
                                                                            aria-label={null}
                                                                            className=""
                                                                            id="foo-field"
                                                                            innerRef={null}
                                                                            isDisabled={false}
                                                                            isReadOnly={false}
                                                                            isRequired={false}
                                                                            name="foo-field"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            type="text"
                                                                            validated="default"
                                                                            value=""
                                                                          >
                                                                            <input
                                                                              aria-invalid={false}
                                                                              aria-label={null}
                                                                              className="pf-c-form-control"
                                                                              disabled={false}
                                                                              id="foo-field"
                                                                              name="foo-field"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              readOnly={false}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </TextInputBase>
                                                                        </ForwardRef>
                                                                      </div>
                                                                    </div>
                                                                  </Component>
                                                                </FormGroup>
                                                              </TextField>
                                                            </FormFieldHideWrapper>
                                                          </FormConditionWrapper>
                                                        </SingleField>
                                                      </div>
                                                    </div>
                                                  </main>
                                                </Component>
                                                <WizardStepButtons
                                                  buttonLabels={
                                                    Object {
                                                      "back": "Back",
                                                      "cancel": "Cancel",
                                                      "next": "Next",
                                                      "submit": "Submit",
                                                    }
                                                  }
                                                  disableBack={true}
                                                  formOptions={
                                                    Object {
                                                      "batch": [Function],
                                                      "blur": [Function],
                                                      "change": [Function],
                                                      "clearOnUnmount": false,
                                                      "clearedValue": undefined,
                                                      "concat": [Function],
                                                      "destroyOnUnregister": false,
                                                      "focus": [Function],
                                                      "getFieldState": [Function],
                                                      "getRegisteredFields": [Function],
                                                      "getState": [Function],
                                                      "handleSubmit": [Function],
                                                      "initialize": [Function],
                                                      "insert": [Function],
                                                      "isValidationPaused": [Function],
                                                      "move": [Function],
                                                      "onCancel": [Function],
                                                      "onReset": [Function],
                                                      "onSubmit": [MockFunction],
                                                      "pauseValidation": [Function],
                                                      "pop": [Function],
                                                      "pristine": true,
                                                      "push": [Function],
                                                      "registerField": [Function],
                                                      "registerInputFile": [Function],
                                                      "remove": [Function],
                                                      "removeBatch": [Function],
                                                      "renderForm": [Function],
                                                      "reset": [Function],
                                                      "resetFieldState": [Function],
                                                      "resumeValidation": [Function],
                                                      "setConfig": [Function],
                                                      "shift": [Function],
                                                      "submit": [Function],
                                                      "subscribe": [Function],
                                                      "swap": [Function],
                                                      "unRegisterInputFile": [Function],
                                                      "unshift": [Function],
                                                      "update": [Function],
                                                      "valid": true,
                                                    }
                                                  }
                                                  handleNext={[Function]}
                                                  handlePrev={[Function]}
                                                  nextStep="2"
                                                >
                                                  <footer
                                                    className="pf-c-wizard__footer "
                                                  >
                                                    <FormSpy>
                                                      <NextButton
                                                        batch={[Function]}
                                                        blur={[Function]}
                                                        change={[Function]}
                                                        clearOnUnmount={false}
                                                        concat={[Function]}
                                                        destroyOnUnregister={false}
                                                        focus={[Function]}
                                                        getFieldState={[Function]}
                                                        getRegisteredFields={[Function]}
                                                        getState={[Function]}
                                                        handleNext={[Function]}
                                                        handleSubmit={[Function]}
                                                        initialize={[Function]}
                                                        insert={[Function]}
                                                        isValidationPaused={[Function]}
                                                        move={[Function]}
                                                        nextLabel="Next"
                                                        nextStep="2"
                                                        onCancel={[Function]}
                                                        onReset={[Function]}
                                                        onSubmit={[MockFunction]}
                                                        pauseValidation={[Function]}
                                                        pop={[Function]}
                                                        pristine={true}
                                                        push={[Function]}
                                                        registerField={[Function]}
                                                        registerInputFile={[Function]}
                                                        remove={[Function]}
                                                        removeBatch={[Function]}
                                                        renderForm={[Function]}
                                                        reset={[Function]}
                                                        resetFieldState={[Function]}
                                                        resumeValidation={[Function]}
                                                        setConfig={[Function]}
                                                        shift={[Function]}
                                                        submit={[Function]}
                                                        submitLabel="Submit"
                                                        subscribe={[Function]}
                                                        swap={[Function]}
                                                        unRegisterInputFile={[Function]}
                                                        unshift={[Function]}
                                                        update={[Function]}
                                                        valid={true}
                                                      >
                                                        <Component
                                                          isDisabled={false}
                                                          onClick={[Function]}
                                                          type="button"
                                                          variant="primary"
                                                        >
                                                          <button
                                                            aria-disabled={null}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-primary"
                                                            data-ouia-component-id={null}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={false}
                                                            onClick={[Function]}
                                                            tabIndex={null}
                                                            type="button"
                                                          >
                                                            Next
                                                          </button>
                                                        </Component>
                                                      </NextButton>
                                                      <Component
                                                        isDisabled={true}
                                                        onClick={[Function]}
                                                        type="button"
                                                        variant="secondary"
                                                      >
                                                        <button
                                                          aria-disabled={null}
                                                          aria-label={null}
                                                          className="pf-c-button pf-m-secondary"
                                                          data-ouia-component-id={null}
                                                          data-ouia-component-type="PF4/Button"
                                                          data-ouia-safe={true}
                                                          disabled={true}
                                                          onClick={[Function]}
                                                          tabIndex={null}
                                                          type="button"
                                                        >
                                                          Back
                                                        </button>
                                                      </Component>
                                                      <Component
                                                        onClick={[Function]}
                                                        type="button"
                                                        variant="link"
                                                      >
                                                        <button
                                                          aria-disabled={null}
                                                          aria-label={null}
                                                          className="pf-c-button pf-m-link"
                                                          data-ouia-component-id={null}
                                                          data-ouia-component-type="PF4/Button"
                                                          data-ouia-safe={true}
                                                          disabled={false}
                                                          onClick={[Function]}
                                                          tabIndex={null}
                                                          type="button"
                                                        >
                                                          Cancel
                                                        </button>
                                                      </Component>
                                                    </FormSpy>
                                                  </footer>
                                                </WizardStepButtons>
                                              </WizardStep>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </Component>
                                </div>
                              </Component>
                            </Portal>
                          </Modal>
                        </WizardInternal>
                      </Wizard>
                    </WizardFunction>
                  </FormFieldHideWrapper>
                </FormConditionWrapper>
              </SingleField>
            </form>
          </Component>
        </FormTemplate>
      </PF4FormTemplate>
    </FormTemplate>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Wizard /> should render correctly in modal and unmount 2`] = `null`;
