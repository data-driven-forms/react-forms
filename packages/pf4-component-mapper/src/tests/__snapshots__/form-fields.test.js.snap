// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormFields should render Checkbox correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Checkbox
      id="someIdKey"
      name="Name of the field"
    >
      <SingleCheckbox
        id="someIdKey"
        name="Name of the field"
      >
        <FormGroup
          hideLabel={true}
          id="someIdKey"
          isRequired={false}
          meta={
            Object {
              "active": false,
              "data": Object {},
              "dirty": false,
              "dirtySinceLastSubmit": false,
              "error": undefined,
              "initial": undefined,
              "invalid": false,
              "length": undefined,
              "modified": false,
              "pristine": true,
              "submitError": undefined,
              "submitFailed": false,
              "submitSucceeded": false,
              "submitting": false,
              "touched": false,
              "valid": true,
              "validating": false,
              "visited": false,
            }
          }
        >
          <Component
            fieldId="someIdKey"
            isRequired={false}
            label={false}
            validated="default"
          >
            <div
              className="pf-c-form__group"
            >
              <div
                className="pf-c-form__group-control"
              >
                <Checkbox
                  className=""
                  id="someIdKey"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value=""
                >
                  <div
                    className="pf-c-check"
                  >
                    <input
                      aria-invalid={false}
                      checked={false}
                      className="pf-c-check__input"
                      disabled={false}
                      id="someIdKey"
                      name="Name of the field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                      value=""
                    />
                  </div>
                </Checkbox>
              </div>
            </div>
          </Component>
        </FormGroup>
      </SingleCheckbox>
    </Checkbox>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render Checkbox with options correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Checkbox
      id="someIdKey"
      name="Name of the field"
      options={
        Array [
          Object {
            "label": "One",
            "value": "1",
          },
          Object {
            "label": "Two",
            "value": "2",
          },
          Object {
            "label": "Three",
            "value": "3",
          },
        ]
      }
    >
      <MultipleChoiceList
        id="someIdKey"
        name="Name of the field"
        options={
          Array [
            Object {
              "label": "One",
              "value": "1",
            },
            Object {
              "label": "Two",
              "value": "2",
            },
            Object {
              "label": "Three",
              "value": "3",
            },
          ]
        }
      >
        <MultipleChoiceList
          Checkbox={[Function]}
          Wrapper={[Function]}
          id="someIdKey"
          name="Name of the field"
          options={
            Array [
              Object {
                "label": "One",
                "value": "1",
              },
              Object {
                "label": "Two",
                "value": "2",
              },
              Object {
                "label": "Three",
                "value": "3",
              },
            ]
          }
        >
          <Wrapper
            meta={
              Object {
                "active": false,
                "data": Object {},
                "dirty": false,
                "dirtySinceLastSubmit": false,
                "error": undefined,
                "initial": undefined,
                "invalid": false,
                "length": undefined,
                "modified": false,
                "pristine": true,
                "submitError": undefined,
                "submitFailed": false,
                "submitSucceeded": false,
                "submitting": false,
                "touched": false,
                "valid": true,
                "validating": false,
                "visited": false,
              }
            }
            name="Name of the field"
            rest={
              Object {
                "id": "someIdKey",
              }
            }
            showError={false}
          >
            <FormGroup
              id="Name of the field"
              isRequired={false}
              meta={
                Object {
                  "active": false,
                  "data": Object {},
                  "dirty": false,
                  "dirtySinceLastSubmit": false,
                  "error": undefined,
                  "initial": undefined,
                  "invalid": false,
                  "length": undefined,
                  "modified": false,
                  "pristine": true,
                  "submitError": undefined,
                  "submitFailed": false,
                  "submitSucceeded": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "validating": false,
                  "visited": false,
                }
              }
              name="Name of the field"
              rest={
                Object {
                  "id": "someIdKey",
                }
              }
              showError={false}
            >
              <Component
                fieldId="Name of the field"
                isRequired={false}
                validated="default"
              >
                <div
                  className="pf-c-form__group"
                >
                  <div
                    className="pf-c-form__group-control"
                  >
                    <SingleCheckbox
                      Checkbox={[Function]}
                      aria-label="One"
                      id="someIdKey-1"
                      key="someIdKey-1"
                      label="One"
                      name="Name of the field"
                      option={
                        Object {
                          "label": "One",
                          "value": "1",
                        }
                      }
                      value="1"
                    >
                      <FinalCheckbox
                        aria-label="One"
                        checked={false}
                        id="someIdKey-1"
                        label="One"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "length": undefined,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "validating": false,
                            "visited": false,
                          }
                        }
                        name="Name of the field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        option={
                          Object {
                            "label": "One",
                            "value": "1",
                          }
                        }
                        type="checkbox"
                        value="1"
                      >
                        <Checkbox
                          aria-label="One"
                          checked={false}
                          className=""
                          id="someIdKey-1"
                          isChecked={false}
                          isDisabled={false}
                          isValid={true}
                          label="One"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "length": undefined,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "validating": false,
                              "visited": false,
                            }
                          }
                          name="Name of the field"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          option={
                            Object {
                              "label": "One",
                              "value": "1",
                            }
                          }
                          type="checkbox"
                          value="1"
                        >
                          <div
                            className="pf-c-check"
                          >
                            <input
                              aria-invalid={false}
                              aria-label="One"
                              checked={false}
                              className="pf-c-check__input"
                              disabled={false}
                              id="someIdKey-1"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "length": undefined,
                                  "modified": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "validating": false,
                                  "visited": false,
                                }
                              }
                              name="Name of the field"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              option={
                                Object {
                                  "label": "One",
                                  "value": "1",
                                }
                              }
                              type="checkbox"
                              value="1"
                            />
                            <label
                              className="pf-c-check__label"
                              htmlFor="someIdKey-1"
                            >
                              One
                            </label>
                          </div>
                        </Checkbox>
                      </FinalCheckbox>
                    </SingleCheckbox>
                    <SingleCheckbox
                      Checkbox={[Function]}
                      aria-label="Two"
                      id="someIdKey-2"
                      key="someIdKey-2"
                      label="Two"
                      name="Name of the field"
                      option={
                        Object {
                          "label": "Two",
                          "value": "2",
                        }
                      }
                      value="2"
                    >
                      <FinalCheckbox
                        aria-label="Two"
                        checked={false}
                        id="someIdKey-2"
                        label="Two"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "length": undefined,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "validating": false,
                            "visited": false,
                          }
                        }
                        name="Name of the field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        option={
                          Object {
                            "label": "Two",
                            "value": "2",
                          }
                        }
                        type="checkbox"
                        value="2"
                      >
                        <Checkbox
                          aria-label="Two"
                          checked={false}
                          className=""
                          id="someIdKey-2"
                          isChecked={false}
                          isDisabled={false}
                          isValid={true}
                          label="Two"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "length": undefined,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "validating": false,
                              "visited": false,
                            }
                          }
                          name="Name of the field"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          option={
                            Object {
                              "label": "Two",
                              "value": "2",
                            }
                          }
                          type="checkbox"
                          value="2"
                        >
                          <div
                            className="pf-c-check"
                          >
                            <input
                              aria-invalid={false}
                              aria-label="Two"
                              checked={false}
                              className="pf-c-check__input"
                              disabled={false}
                              id="someIdKey-2"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "length": undefined,
                                  "modified": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "validating": false,
                                  "visited": false,
                                }
                              }
                              name="Name of the field"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              option={
                                Object {
                                  "label": "Two",
                                  "value": "2",
                                }
                              }
                              type="checkbox"
                              value="2"
                            />
                            <label
                              className="pf-c-check__label"
                              htmlFor="someIdKey-2"
                            >
                              Two
                            </label>
                          </div>
                        </Checkbox>
                      </FinalCheckbox>
                    </SingleCheckbox>
                    <SingleCheckbox
                      Checkbox={[Function]}
                      aria-label="Three"
                      id="someIdKey-3"
                      key="someIdKey-3"
                      label="Three"
                      name="Name of the field"
                      option={
                        Object {
                          "label": "Three",
                          "value": "3",
                        }
                      }
                      value="3"
                    >
                      <FinalCheckbox
                        aria-label="Three"
                        checked={false}
                        id="someIdKey-3"
                        label="Three"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "length": undefined,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "validating": false,
                            "visited": false,
                          }
                        }
                        name="Name of the field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        option={
                          Object {
                            "label": "Three",
                            "value": "3",
                          }
                        }
                        type="checkbox"
                        value="3"
                      >
                        <Checkbox
                          aria-label="Three"
                          checked={false}
                          className=""
                          id="someIdKey-3"
                          isChecked={false}
                          isDisabled={false}
                          isValid={true}
                          label="Three"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "length": undefined,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "validating": false,
                              "visited": false,
                            }
                          }
                          name="Name of the field"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          option={
                            Object {
                              "label": "Three",
                              "value": "3",
                            }
                          }
                          type="checkbox"
                          value="3"
                        >
                          <div
                            className="pf-c-check"
                          >
                            <input
                              aria-invalid={false}
                              aria-label="Three"
                              checked={false}
                              className="pf-c-check__input"
                              disabled={false}
                              id="someIdKey-3"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "length": undefined,
                                  "modified": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "validating": false,
                                  "visited": false,
                                }
                              }
                              name="Name of the field"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              option={
                                Object {
                                  "label": "Three",
                                  "value": "3",
                                }
                              }
                              type="checkbox"
                              value="3"
                            />
                            <label
                              className="pf-c-check__label"
                              htmlFor="someIdKey-3"
                            >
                              Three
                            </label>
                          </div>
                        </Checkbox>
                      </FinalCheckbox>
                    </SingleCheckbox>
                  </div>
                </div>
              </Component>
            </FormGroup>
          </Wrapper>
        </MultipleChoiceList>
      </MultipleChoiceList>
    </Checkbox>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render DatePicker correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <DatePicker
      id="someIdKey"
      name="Name of the field"
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <ForwardRef
                id="someIdKey"
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="date"
                validated="default"
                value=""
              >
                <TextInputBase
                  aria-label={null}
                  className=""
                  id="someIdKey"
                  innerRef={null}
                  isDisabled={false}
                  isReadOnly={false}
                  isRequired={false}
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="date"
                  validated="default"
                  value=""
                >
                  <input
                    aria-invalid={false}
                    aria-label={null}
                    className="pf-c-form-control"
                    disabled={false}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    readOnly={false}
                    required={false}
                    type="date"
                    value=""
                  />
                </TextInputBase>
              </ForwardRef>
            </div>
          </div>
        </Component>
      </FormGroup>
    </DatePicker>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render Radio correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Radio
      id="someIdKey"
      name="Name of the field"
      options={
        Array [
          Object {
            "label": "One",
            "value": "1",
          },
          Object {
            "label": "Two",
            "value": "2",
          },
          Object {
            "label": "Three",
            "value": "3",
          },
        ]
      }
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <RadioOption
                key="1"
                name="Name of the field"
                option={
                  Object {
                    "label": "One",
                    "value": "1",
                  }
                }
              >
                <Radio
                  aria-label="One"
                  className=""
                  id="Name of the field-1"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  key="Name of the field-1"
                  label="One"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="1"
                >
                  <div
                    className="pf-c-radio"
                  >
                    <input
                      aria-invalid={false}
                      checked={false}
                      className="pf-c-radio__input"
                      disabled={false}
                      id="Name of the field-1"
                      name="Name of the field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value="1"
                    />
                    <label
                      className="pf-c-radio__label"
                      htmlFor="Name of the field-1"
                    >
                      One
                    </label>
                  </div>
                </Radio>
              </RadioOption>
              <RadioOption
                key="2"
                name="Name of the field"
                option={
                  Object {
                    "label": "Two",
                    "value": "2",
                  }
                }
              >
                <Radio
                  aria-label="Two"
                  className=""
                  id="Name of the field-2"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  key="Name of the field-2"
                  label="Two"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="2"
                >
                  <div
                    className="pf-c-radio"
                  >
                    <input
                      aria-invalid={false}
                      checked={false}
                      className="pf-c-radio__input"
                      disabled={false}
                      id="Name of the field-2"
                      name="Name of the field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value="2"
                    />
                    <label
                      className="pf-c-radio__label"
                      htmlFor="Name of the field-2"
                    >
                      Two
                    </label>
                  </div>
                </Radio>
              </RadioOption>
              <RadioOption
                key="3"
                name="Name of the field"
                option={
                  Object {
                    "label": "Three",
                    "value": "3",
                  }
                }
              >
                <Radio
                  aria-label="Three"
                  className=""
                  id="Name of the field-3"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  key="Name of the field-3"
                  label="Three"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="3"
                >
                  <div
                    className="pf-c-radio"
                  >
                    <input
                      aria-invalid={false}
                      checked={false}
                      className="pf-c-radio__input"
                      disabled={false}
                      id="Name of the field-3"
                      name="Name of the field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value="3"
                    />
                    <label
                      className="pf-c-radio__label"
                      htmlFor="Name of the field-3"
                    >
                      Three
                    </label>
                  </div>
                </Radio>
              </RadioOption>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Radio>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render Select correctly 1`] = `
<ContextProvider
  value={
    Object {
      "batch": [Function],
      "blur": [Function],
      "change": [Function],
      "destroyOnUnregister": false,
      "focus": [Function],
      "getFieldState": [Function],
      "getRegisteredFields": [Function],
      "getState": [Function],
      "initialize": [Function],
      "isValidationPaused": [Function],
      "mutators": Object {},
      "pauseValidation": [Function],
      "registerField": [Function],
      "reset": [Function],
      "resetFieldState": [Function],
      "resumeValidation": [Function],
      "setConfig": [Function],
      "submit": [Function],
      "subscribe": [Function],
    }
  }
>
  <ContextProvider
    value={
      Object {
        "formOptions": Object {},
      }
    }
  >
    <Select
      id="someIdKey"
      name="Name of the field"
      options={
        Array [
          Object {
            "label": "One",
            "value": "1",
          },
          Object {
            "label": "Two",
            "value": "2",
          },
          Object {
            "label": "Three",
            "value": "3",
          },
        ]
      }
    />
  </ContextProvider>
</ContextProvider>
`;

exports[`FormFields should render Switch correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Switch
      id="someIdKey"
      name="Name of the field"
    >
      <FormGroup
        hideLabel={true}
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          label={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <Switch
                aria-label=""
                checked={false}
                id="someIdKey"
                isChecked={true}
                isDisabled={false}
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="checkbox"
              >
                <label
                  className="pf-c-switch"
                  data-ouia-component-id={1}
                  data-ouia-component-type="PF4/Switch"
                  data-ouia-safe={true}
                  htmlFor="someIdKey"
                >
                  <input
                    aria-label=""
                    aria-labelledby="someIdKey-on"
                    checked={false}
                    className="pf-c-switch__input"
                    disabled={false}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="pf-c-switch__toggle"
                  >
                    <div
                      aria-hidden="true"
                      className="pf-c-switch__toggle-icon"
                    >
                      <CheckIcon
                        color="currentColor"
                        noVerticalAlign={true}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={null}
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                            transform=""
                          />
                        </svg>
                      </CheckIcon>
                    </div>
                  </span>
                </label>
              </Switch>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Switch>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render TextField correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <TextField
      id="someIdKey"
      name="Name of the field"
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <ForwardRef
                id="someIdKey"
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                validated="default"
                value=""
              >
                <TextInputBase
                  aria-label={null}
                  className=""
                  id="someIdKey"
                  innerRef={null}
                  isDisabled={false}
                  isReadOnly={false}
                  isRequired={false}
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  validated="default"
                  value=""
                >
                  <input
                    aria-invalid={false}
                    aria-label={null}
                    className="pf-c-form-control"
                    disabled={false}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    readOnly={false}
                    required={false}
                    type="text"
                    value=""
                  />
                </TextInputBase>
              </ForwardRef>
            </div>
          </div>
        </Component>
      </FormGroup>
    </TextField>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render TextField with description correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <TextField
      description="This is description"
      id="someIdKey"
      name="Name of the field"
    >
      <FormGroup
        description="This is description"
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <Component>
                <div
                  className="pf-c-content"
                >
                  <Component
                    component="small"
                  >
                    <small
                      className=""
                      data-pf-content={true}
                    >
                      This is description
                    </small>
                  </Component>
                </div>
              </Component>
              <ForwardRef
                id="someIdKey"
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                validated="default"
                value=""
              >
                <TextInputBase
                  aria-label={null}
                  className=""
                  id="someIdKey"
                  innerRef={null}
                  isDisabled={false}
                  isReadOnly={false}
                  isRequired={false}
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  validated="default"
                  value=""
                >
                  <input
                    aria-invalid={false}
                    aria-label={null}
                    className="pf-c-form-control"
                    disabled={false}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    readOnly={false}
                    required={false}
                    type="text"
                    value=""
                  />
                </TextInputBase>
              </ForwardRef>
            </div>
          </div>
        </Component>
      </FormGroup>
    </TextField>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render TextField without id correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <TextField
      name="Name of the field"
    >
      <FormGroup
        id="Name of the field"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="Name of the field"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <ForwardRef
                id="Name of the field"
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                validated="default"
                value=""
              >
                <TextInputBase
                  aria-label={null}
                  className=""
                  id="Name of the field"
                  innerRef={null}
                  isDisabled={false}
                  isReadOnly={false}
                  isRequired={false}
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  validated="default"
                  value=""
                >
                  <input
                    aria-invalid={false}
                    aria-label={null}
                    className="pf-c-form-control"
                    disabled={false}
                    id="Name of the field"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    readOnly={false}
                    required={false}
                    type="text"
                    value=""
                  />
                </TextInputBase>
              </ForwardRef>
            </div>
          </div>
        </Component>
      </FormGroup>
    </TextField>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render Textarea correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Textarea
      id="someIdKey"
      name="Name of the field"
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <TextArea
                aria-label={null}
                className=""
                id="someIdKey"
                isRequired={false}
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                resizeOrientation="both"
                validated="default"
                value=""
              >
                <textarea
                  aria-invalid={false}
                  aria-label={null}
                  className="pf-c-form-control"
                  id="someIdKey"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  value=""
                />
              </TextArea>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Textarea>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render TimePicker correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <TimePicker
      id="someIdKey"
      name="Name of the field"
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <ForwardRef
                id="someIdKey"
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="time"
                validated="default"
                value=""
              >
                <TextInputBase
                  aria-label={null}
                  className=""
                  id="someIdKey"
                  innerRef={null}
                  isDisabled={false}
                  isReadOnly={false}
                  isRequired={false}
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="time"
                  validated="default"
                  value=""
                >
                  <input
                    aria-invalid={false}
                    aria-label={null}
                    className="pf-c-form-control"
                    disabled={false}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    readOnly={false}
                    required={false}
                    type="time"
                    value=""
                  />
                </TextInputBase>
              </ForwardRef>
            </div>
          </div>
        </Component>
      </FormGroup>
    </TimePicker>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render disabled Checkbox with options correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Checkbox
      disabled={true}
      id="someIdKey"
      name="Name of the field"
      options={
        Array [
          Object {
            "label": "One",
            "value": "1",
          },
          Object {
            "label": "Two",
            "value": "2",
          },
          Object {
            "label": "Three",
            "value": "3",
          },
        ]
      }
    >
      <MultipleChoiceList
        disabled={true}
        id="someIdKey"
        name="Name of the field"
        options={
          Array [
            Object {
              "label": "One",
              "value": "1",
            },
            Object {
              "label": "Two",
              "value": "2",
            },
            Object {
              "label": "Three",
              "value": "3",
            },
          ]
        }
      >
        <MultipleChoiceList
          Checkbox={[Function]}
          Wrapper={[Function]}
          disabled={true}
          id="someIdKey"
          name="Name of the field"
          options={
            Array [
              Object {
                "label": "One",
                "value": "1",
              },
              Object {
                "label": "Two",
                "value": "2",
              },
              Object {
                "label": "Three",
                "value": "3",
              },
            ]
          }
        >
          <Wrapper
            meta={
              Object {
                "active": false,
                "data": Object {},
                "dirty": false,
                "dirtySinceLastSubmit": false,
                "error": undefined,
                "initial": undefined,
                "invalid": false,
                "length": undefined,
                "modified": false,
                "pristine": true,
                "submitError": undefined,
                "submitFailed": false,
                "submitSucceeded": false,
                "submitting": false,
                "touched": false,
                "valid": true,
                "validating": false,
                "visited": false,
              }
            }
            name="Name of the field"
            rest={
              Object {
                "disabled": true,
                "id": "someIdKey",
              }
            }
            showError={false}
          >
            <FormGroup
              id="Name of the field"
              isRequired={false}
              meta={
                Object {
                  "active": false,
                  "data": Object {},
                  "dirty": false,
                  "dirtySinceLastSubmit": false,
                  "error": undefined,
                  "initial": undefined,
                  "invalid": false,
                  "length": undefined,
                  "modified": false,
                  "pristine": true,
                  "submitError": undefined,
                  "submitFailed": false,
                  "submitSucceeded": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "validating": false,
                  "visited": false,
                }
              }
              name="Name of the field"
              rest={
                Object {
                  "disabled": true,
                  "id": "someIdKey",
                }
              }
              showError={false}
            >
              <Component
                fieldId="Name of the field"
                isRequired={false}
                validated="default"
              >
                <div
                  className="pf-c-form__group"
                >
                  <div
                    className="pf-c-form__group-control"
                  >
                    <SingleCheckbox
                      Checkbox={[Function]}
                      aria-label="One"
                      disabled={true}
                      id="someIdKey-1"
                      key="someIdKey-1"
                      label="One"
                      name="Name of the field"
                      option={
                        Object {
                          "label": "One",
                          "value": "1",
                        }
                      }
                      value="1"
                    >
                      <FinalCheckbox
                        aria-label="One"
                        checked={false}
                        disabled={true}
                        id="someIdKey-1"
                        label="One"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "length": undefined,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "validating": false,
                            "visited": false,
                          }
                        }
                        name="Name of the field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        option={
                          Object {
                            "label": "One",
                            "value": "1",
                          }
                        }
                        type="checkbox"
                        value="1"
                      >
                        <Checkbox
                          aria-label="One"
                          checked={false}
                          className=""
                          disabled={true}
                          id="someIdKey-1"
                          isChecked={false}
                          isDisabled={false}
                          isValid={true}
                          label="One"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "length": undefined,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "validating": false,
                              "visited": false,
                            }
                          }
                          name="Name of the field"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          option={
                            Object {
                              "label": "One",
                              "value": "1",
                            }
                          }
                          type="checkbox"
                          value="1"
                        >
                          <div
                            className="pf-c-check"
                          >
                            <input
                              aria-invalid={false}
                              aria-label="One"
                              checked={false}
                              className="pf-c-check__input"
                              disabled={false}
                              id="someIdKey-1"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "length": undefined,
                                  "modified": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "validating": false,
                                  "visited": false,
                                }
                              }
                              name="Name of the field"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              option={
                                Object {
                                  "label": "One",
                                  "value": "1",
                                }
                              }
                              type="checkbox"
                              value="1"
                            />
                            <label
                              className="pf-c-check__label"
                              htmlFor="someIdKey-1"
                            >
                              One
                            </label>
                          </div>
                        </Checkbox>
                      </FinalCheckbox>
                    </SingleCheckbox>
                    <SingleCheckbox
                      Checkbox={[Function]}
                      aria-label="Two"
                      disabled={true}
                      id="someIdKey-2"
                      key="someIdKey-2"
                      label="Two"
                      name="Name of the field"
                      option={
                        Object {
                          "label": "Two",
                          "value": "2",
                        }
                      }
                      value="2"
                    >
                      <FinalCheckbox
                        aria-label="Two"
                        checked={false}
                        disabled={true}
                        id="someIdKey-2"
                        label="Two"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "length": undefined,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "validating": false,
                            "visited": false,
                          }
                        }
                        name="Name of the field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        option={
                          Object {
                            "label": "Two",
                            "value": "2",
                          }
                        }
                        type="checkbox"
                        value="2"
                      >
                        <Checkbox
                          aria-label="Two"
                          checked={false}
                          className=""
                          disabled={true}
                          id="someIdKey-2"
                          isChecked={false}
                          isDisabled={false}
                          isValid={true}
                          label="Two"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "length": undefined,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "validating": false,
                              "visited": false,
                            }
                          }
                          name="Name of the field"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          option={
                            Object {
                              "label": "Two",
                              "value": "2",
                            }
                          }
                          type="checkbox"
                          value="2"
                        >
                          <div
                            className="pf-c-check"
                          >
                            <input
                              aria-invalid={false}
                              aria-label="Two"
                              checked={false}
                              className="pf-c-check__input"
                              disabled={false}
                              id="someIdKey-2"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "length": undefined,
                                  "modified": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "validating": false,
                                  "visited": false,
                                }
                              }
                              name="Name of the field"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              option={
                                Object {
                                  "label": "Two",
                                  "value": "2",
                                }
                              }
                              type="checkbox"
                              value="2"
                            />
                            <label
                              className="pf-c-check__label"
                              htmlFor="someIdKey-2"
                            >
                              Two
                            </label>
                          </div>
                        </Checkbox>
                      </FinalCheckbox>
                    </SingleCheckbox>
                    <SingleCheckbox
                      Checkbox={[Function]}
                      aria-label="Three"
                      disabled={true}
                      id="someIdKey-3"
                      key="someIdKey-3"
                      label="Three"
                      name="Name of the field"
                      option={
                        Object {
                          "label": "Three",
                          "value": "3",
                        }
                      }
                      value="3"
                    >
                      <FinalCheckbox
                        aria-label="Three"
                        checked={false}
                        disabled={true}
                        id="someIdKey-3"
                        label="Three"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "length": undefined,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "validating": false,
                            "visited": false,
                          }
                        }
                        name="Name of the field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        option={
                          Object {
                            "label": "Three",
                            "value": "3",
                          }
                        }
                        type="checkbox"
                        value="3"
                      >
                        <Checkbox
                          aria-label="Three"
                          checked={false}
                          className=""
                          disabled={true}
                          id="someIdKey-3"
                          isChecked={false}
                          isDisabled={false}
                          isValid={true}
                          label="Three"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "length": undefined,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "validating": false,
                              "visited": false,
                            }
                          }
                          name="Name of the field"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          option={
                            Object {
                              "label": "Three",
                              "value": "3",
                            }
                          }
                          type="checkbox"
                          value="3"
                        >
                          <div
                            className="pf-c-check"
                          >
                            <input
                              aria-invalid={false}
                              aria-label="Three"
                              checked={false}
                              className="pf-c-check__input"
                              disabled={false}
                              id="someIdKey-3"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "length": undefined,
                                  "modified": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "validating": false,
                                  "visited": false,
                                }
                              }
                              name="Name of the field"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              option={
                                Object {
                                  "label": "Three",
                                  "value": "3",
                                }
                              }
                              type="checkbox"
                              value="3"
                            />
                            <label
                              className="pf-c-check__label"
                              htmlFor="someIdKey-3"
                            >
                              Three
                            </label>
                          </div>
                        </Checkbox>
                      </FinalCheckbox>
                    </SingleCheckbox>
                  </div>
                </div>
              </Component>
            </FormGroup>
          </Wrapper>
        </MultipleChoiceList>
      </MultipleChoiceList>
    </Checkbox>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render disabled Radio correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Radio
      disabled={true}
      id="someIdKey"
      name="Name of the field"
      options={
        Array [
          Object {
            "label": "One",
            "value": "1",
          },
          Object {
            "label": "Two",
            "value": "2",
          },
          Object {
            "label": "Three",
            "value": "3",
          },
        ]
      }
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <RadioOption
                key="1"
                name="Name of the field"
                option={
                  Object {
                    "label": "One",
                    "value": "1",
                  }
                }
              >
                <Radio
                  aria-label="One"
                  className=""
                  id="Name of the field-1"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  key="Name of the field-1"
                  label="One"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="1"
                >
                  <div
                    className="pf-c-radio"
                  >
                    <input
                      aria-invalid={false}
                      checked={false}
                      className="pf-c-radio__input"
                      disabled={false}
                      id="Name of the field-1"
                      name="Name of the field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value="1"
                    />
                    <label
                      className="pf-c-radio__label"
                      htmlFor="Name of the field-1"
                    >
                      One
                    </label>
                  </div>
                </Radio>
              </RadioOption>
              <RadioOption
                key="2"
                name="Name of the field"
                option={
                  Object {
                    "label": "Two",
                    "value": "2",
                  }
                }
              >
                <Radio
                  aria-label="Two"
                  className=""
                  id="Name of the field-2"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  key="Name of the field-2"
                  label="Two"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="2"
                >
                  <div
                    className="pf-c-radio"
                  >
                    <input
                      aria-invalid={false}
                      checked={false}
                      className="pf-c-radio__input"
                      disabled={false}
                      id="Name of the field-2"
                      name="Name of the field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value="2"
                    />
                    <label
                      className="pf-c-radio__label"
                      htmlFor="Name of the field-2"
                    >
                      Two
                    </label>
                  </div>
                </Radio>
              </RadioOption>
              <RadioOption
                key="3"
                name="Name of the field"
                option={
                  Object {
                    "label": "Three",
                    "value": "3",
                  }
                }
              >
                <Radio
                  aria-label="Three"
                  className=""
                  id="Name of the field-3"
                  isChecked={false}
                  isDisabled={false}
                  isValid={true}
                  key="Name of the field-3"
                  label="Three"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="3"
                >
                  <div
                    className="pf-c-radio"
                  >
                    <input
                      aria-invalid={false}
                      checked={false}
                      className="pf-c-radio__input"
                      disabled={false}
                      id="Name of the field-3"
                      name="Name of the field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="radio"
                      value="3"
                    />
                    <label
                      className="pf-c-radio__label"
                      htmlFor="Name of the field-3"
                    >
                      Three
                    </label>
                  </div>
                </Radio>
              </RadioOption>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Radio>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render disabled Select correctly 1`] = `
<ContextProvider
  value={
    Object {
      "batch": [Function],
      "blur": [Function],
      "change": [Function],
      "destroyOnUnregister": false,
      "focus": [Function],
      "getFieldState": [Function],
      "getRegisteredFields": [Function],
      "getState": [Function],
      "initialize": [Function],
      "isValidationPaused": [Function],
      "mutators": Object {},
      "pauseValidation": [Function],
      "registerField": [Function],
      "reset": [Function],
      "resetFieldState": [Function],
      "resumeValidation": [Function],
      "setConfig": [Function],
      "submit": [Function],
      "subscribe": [Function],
    }
  }
>
  <ContextProvider
    value={
      Object {
        "formOptions": Object {},
      }
    }
  >
    <Select
      id="someIdKey"
      isDisabled={true}
      name="Name of the field"
      options={
        Array [
          Object {
            "label": "One",
            "value": "1",
          },
          Object {
            "label": "Two",
            "value": "2",
          },
          Object {
            "label": "Three",
            "value": "3",
          },
        ]
      }
    />
  </ContextProvider>
</ContextProvider>
`;

exports[`FormFields should render disabled Switch correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Switch
      id="someIdKey"
      isDisabled={true}
      name="Name of the field"
    >
      <FormGroup
        hideLabel={true}
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          label={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <Switch
                aria-label=""
                checked={false}
                id="someIdKey"
                isChecked={true}
                isDisabled={true}
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="checkbox"
              >
                <label
                  className="pf-c-switch"
                  data-ouia-component-id={3}
                  data-ouia-component-type="PF4/Switch"
                  data-ouia-safe={true}
                  htmlFor="someIdKey"
                >
                  <input
                    aria-label=""
                    aria-labelledby="someIdKey-on"
                    checked={false}
                    className="pf-c-switch__input"
                    disabled={true}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="pf-c-switch__toggle"
                  >
                    <div
                      aria-hidden="true"
                      className="pf-c-switch__toggle-icon"
                    >
                      <CheckIcon
                        color="currentColor"
                        noVerticalAlign={true}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={null}
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                            transform=""
                          />
                        </svg>
                      </CheckIcon>
                    </div>
                  </span>
                </label>
              </Switch>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Switch>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render disabled Switch correctly 2`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Switch
      id="someIdKey"
      isDisabled={true}
      name="Name of the field"
    >
      <FormGroup
        hideLabel={true}
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          label={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <Switch
                aria-label=""
                checked={false}
                id="someIdKey"
                isChecked={true}
                isDisabled={true}
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="checkbox"
              >
                <label
                  className="pf-c-switch"
                  data-ouia-component-id={5}
                  data-ouia-component-type="PF4/Switch"
                  data-ouia-safe={true}
                  htmlFor="someIdKey"
                >
                  <input
                    aria-label=""
                    aria-labelledby="someIdKey-on"
                    checked={false}
                    className="pf-c-switch__input"
                    disabled={true}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="pf-c-switch__toggle"
                  >
                    <div
                      aria-hidden="true"
                      className="pf-c-switch__toggle-icon"
                    >
                      <CheckIcon
                        color="currentColor"
                        noVerticalAlign={true}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={null}
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                            transform=""
                          />
                        </svg>
                      </CheckIcon>
                    </div>
                  </span>
                </label>
              </Switch>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Switch>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render disabled Textarea correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Textarea
      id="someIdKey"
      isDisabled={true}
      name="Name of the field"
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <TextArea
                aria-label={null}
                className=""
                disabled={true}
                id="someIdKey"
                isRequired={false}
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                resizeOrientation="both"
                validated="default"
                value=""
              >
                <textarea
                  aria-invalid={false}
                  aria-label={null}
                  className="pf-c-form-control"
                  disabled={true}
                  id="someIdKey"
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  value=""
                />
              </TextArea>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Textarea>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render touched TextField id correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <TextField
      id="someIdKey"
      meta={
        Object {
          "error": false,
          "touched": true,
        }
      }
      name="Name of the field"
    >
      <FormGroup
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <ForwardRef
                id="someIdKey"
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                validated="default"
                value=""
              >
                <TextInputBase
                  aria-label={null}
                  className=""
                  id="someIdKey"
                  innerRef={null}
                  isDisabled={false}
                  isReadOnly={false}
                  isRequired={false}
                  name="Name of the field"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  validated="default"
                  value=""
                >
                  <input
                    aria-invalid={false}
                    aria-label={null}
                    className="pf-c-form-control"
                    disabled={false}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    readOnly={false}
                    required={false}
                    type="text"
                    value=""
                  />
                </TextInputBase>
              </ForwardRef>
            </div>
          </div>
        </Component>
      </FormGroup>
    </TextField>
  </ReactFinalForm>
</RenderWithProvider>
`;

exports[`FormFields should render with onText/OffText Switch correctly 1`] = `
<RenderWithProvider>
  <ReactFinalForm
    onSubmit={[Function]}
  >
    <Switch
      id="someIdKey"
      name="Name of the field"
      offText="Turned off"
      onText="I am on"
    >
      <FormGroup
        hideLabel={true}
        id="someIdKey"
        isRequired={false}
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": undefined,
            "initial": undefined,
            "invalid": false,
            "length": undefined,
            "modified": false,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "touched": false,
            "valid": true,
            "validating": false,
            "visited": false,
          }
        }
      >
        <Component
          fieldId="someIdKey"
          isRequired={false}
          label={false}
          validated="default"
        >
          <div
            className="pf-c-form__group"
          >
            <div
              className="pf-c-form__group-control"
            >
              <Switch
                aria-label=""
                checked={false}
                id="someIdKey"
                isChecked={true}
                isDisabled={false}
                label="I am on"
                labelOff="Turned off"
                name="Name of the field"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="checkbox"
              >
                <label
                  className="pf-c-switch"
                  data-ouia-component-id={7}
                  data-ouia-component-type="PF4/Switch"
                  data-ouia-safe={true}
                  htmlFor="someIdKey"
                >
                  <input
                    aria-label=""
                    aria-labelledby="someIdKey-on"
                    checked={false}
                    className="pf-c-switch__input"
                    disabled={false}
                    id="someIdKey"
                    name="Name of the field"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="pf-c-switch__toggle"
                  />
                  <span
                    aria-hidden="true"
                    className="pf-c-switch__label pf-m-on"
                    id="someIdKey-on"
                  >
                    I am on
                  </span>
                  <span
                    aria-hidden="true"
                    className="pf-c-switch__label pf-m-off"
                    id="someIdKey-off"
                  >
                    Turned off
                  </span>
                </label>
              </Switch>
            </div>
          </div>
        </Component>
      </FormGroup>
    </Switch>
  </ReactFinalForm>
</RenderWithProvider>
`;
